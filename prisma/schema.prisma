// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  firstName     String         @default("NeuroFill User")
  lastName      String?
  profilePic    String?
  planId        String?
  password      String
  creditBalance Float          @default(0)
  images        Image[]
  transactions  Transactions[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model PendingUser {
  id                String   @id @default(uuid())
  email             String   @unique
  firstName         String?
  lastName          String?
  profilePic        String?
  password          String
  verificationToken String   @unique
  tokenExpiresAt    DateTime
  createdAt         DateTime @default(now())
}

model Image {
  id                String   @id @default(uuid())
  title             String
  publicId          String
  secureUrl         String
  transformationUrl String?
  prompt            String?
  authorId          String
  author            User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Transactions {
  id        String   @id @default(uuid())
  stripeId  String   @unique
  amount    Float
  plan      String
  credit    Int
  buyerId   String
  buyer     User     @relation(fields: [buyerId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}
